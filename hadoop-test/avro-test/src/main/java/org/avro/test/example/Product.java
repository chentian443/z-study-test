/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.avro.test.example;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Product extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7561234525746790249L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Product\",\"namespace\":\"org.avro.test.example\",\"fields\":[{\"name\":\"product_id\",\"type\":\"string\",\"default\":\"null\"},{\"name\":\"company_name\",\"type\":\"string\",\"default\":\"null\"},{\"name\":\"product_info\",\"type\":\"string\",\"default\":\"null\"},{\"name\":\"direction\",\"type\":\"string\",\"default\":\"null\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Product> ENCODER =
      new BinaryMessageEncoder<Product>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Product> DECODER =
      new BinaryMessageDecoder<Product>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Product> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Product> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Product>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Product to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Product from a ByteBuffer. */
  public static Product fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence product_id;
  @Deprecated public java.lang.CharSequence company_name;
  @Deprecated public java.lang.CharSequence product_info;
  @Deprecated public java.lang.CharSequence direction;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Product() {}

  /**
   * All-args constructor.
   * @param product_id The new value for product_id
   * @param company_name The new value for company_name
   * @param product_info The new value for product_info
   * @param direction The new value for direction
   */
  public Product(java.lang.CharSequence product_id, java.lang.CharSequence company_name, java.lang.CharSequence product_info, java.lang.CharSequence direction) {
    this.product_id = product_id;
    this.company_name = company_name;
    this.product_info = product_info;
    this.direction = direction;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return product_id;
    case 1: return company_name;
    case 2: return product_info;
    case 3: return direction;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: product_id = (java.lang.CharSequence)value$; break;
    case 1: company_name = (java.lang.CharSequence)value$; break;
    case 2: product_info = (java.lang.CharSequence)value$; break;
    case 3: direction = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'product_id' field.
   * @return The value of the 'product_id' field.
   */
  public java.lang.CharSequence getProductId() {
    return product_id;
  }

  /**
   * Sets the value of the 'product_id' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.CharSequence value) {
    this.product_id = value;
  }

  /**
   * Gets the value of the 'company_name' field.
   * @return The value of the 'company_name' field.
   */
  public java.lang.CharSequence getCompanyName() {
    return company_name;
  }

  /**
   * Sets the value of the 'company_name' field.
   * @param value the value to set.
   */
  public void setCompanyName(java.lang.CharSequence value) {
    this.company_name = value;
  }

  /**
   * Gets the value of the 'product_info' field.
   * @return The value of the 'product_info' field.
   */
  public java.lang.CharSequence getProductInfo() {
    return product_info;
  }

  /**
   * Sets the value of the 'product_info' field.
   * @param value the value to set.
   */
  public void setProductInfo(java.lang.CharSequence value) {
    this.product_info = value;
  }

  /**
   * Gets the value of the 'direction' field.
   * @return The value of the 'direction' field.
   */
  public java.lang.CharSequence getDirection() {
    return direction;
  }

  /**
   * Sets the value of the 'direction' field.
   * @param value the value to set.
   */
  public void setDirection(java.lang.CharSequence value) {
    this.direction = value;
  }

  /**
   * Creates a new Product RecordBuilder.
   * @return A new Product RecordBuilder
   */
  public static org.avro.test.example.Product.Builder newBuilder() {
    return new org.avro.test.example.Product.Builder();
  }

  /**
   * Creates a new Product RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Product RecordBuilder
   */
  public static org.avro.test.example.Product.Builder newBuilder(org.avro.test.example.Product.Builder other) {
    return new org.avro.test.example.Product.Builder(other);
  }

  /**
   * Creates a new Product RecordBuilder by copying an existing Product instance.
   * @param other The existing instance to copy.
   * @return A new Product RecordBuilder
   */
  public static org.avro.test.example.Product.Builder newBuilder(org.avro.test.example.Product other) {
    return new org.avro.test.example.Product.Builder(other);
  }

  /**
   * RecordBuilder for Product instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Product>
    implements org.apache.avro.data.RecordBuilder<Product> {

    private java.lang.CharSequence product_id;
    private java.lang.CharSequence company_name;
    private java.lang.CharSequence product_info;
    private java.lang.CharSequence direction;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.avro.test.example.Product.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.product_id)) {
        this.product_id = data().deepCopy(fields()[0].schema(), other.product_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.company_name)) {
        this.company_name = data().deepCopy(fields()[1].schema(), other.company_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.product_info)) {
        this.product_info = data().deepCopy(fields()[2].schema(), other.product_info);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.direction)) {
        this.direction = data().deepCopy(fields()[3].schema(), other.direction);
        fieldSetFlags()[3] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Product instance
     * @param other The existing instance to copy.
     */
    private Builder(org.avro.test.example.Product other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.product_id)) {
        this.product_id = data().deepCopy(fields()[0].schema(), other.product_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.company_name)) {
        this.company_name = data().deepCopy(fields()[1].schema(), other.company_name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.product_info)) {
        this.product_info = data().deepCopy(fields()[2].schema(), other.product_info);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.direction)) {
        this.direction = data().deepCopy(fields()[3].schema(), other.direction);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'product_id' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductId() {
      return product_id;
    }

    /**
      * Sets the value of the 'product_id' field.
      * @param value The value of 'product_id'.
      * @return This builder.
      */
    public org.avro.test.example.Product.Builder setProductId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.product_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'product_id' field has been set.
      * @return True if the 'product_id' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'product_id' field.
      * @return This builder.
      */
    public org.avro.test.example.Product.Builder clearProductId() {
      product_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'company_name' field.
      * @return The value.
      */
    public java.lang.CharSequence getCompanyName() {
      return company_name;
    }

    /**
      * Sets the value of the 'company_name' field.
      * @param value The value of 'company_name'.
      * @return This builder.
      */
    public org.avro.test.example.Product.Builder setCompanyName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.company_name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'company_name' field has been set.
      * @return True if the 'company_name' field has been set, false otherwise.
      */
    public boolean hasCompanyName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'company_name' field.
      * @return This builder.
      */
    public org.avro.test.example.Product.Builder clearCompanyName() {
      company_name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'product_info' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductInfo() {
      return product_info;
    }

    /**
      * Sets the value of the 'product_info' field.
      * @param value The value of 'product_info'.
      * @return This builder.
      */
    public org.avro.test.example.Product.Builder setProductInfo(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.product_info = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'product_info' field has been set.
      * @return True if the 'product_info' field has been set, false otherwise.
      */
    public boolean hasProductInfo() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'product_info' field.
      * @return This builder.
      */
    public org.avro.test.example.Product.Builder clearProductInfo() {
      product_info = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'direction' field.
      * @return The value.
      */
    public java.lang.CharSequence getDirection() {
      return direction;
    }

    /**
      * Sets the value of the 'direction' field.
      * @param value The value of 'direction'.
      * @return This builder.
      */
    public org.avro.test.example.Product.Builder setDirection(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.direction = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'direction' field has been set.
      * @return True if the 'direction' field has been set, false otherwise.
      */
    public boolean hasDirection() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'direction' field.
      * @return This builder.
      */
    public org.avro.test.example.Product.Builder clearDirection() {
      direction = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Product build() {
      try {
        Product record = new Product();
        record.product_id = fieldSetFlags()[0] ? this.product_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.company_name = fieldSetFlags()[1] ? this.company_name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.product_info = fieldSetFlags()[2] ? this.product_info : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.direction = fieldSetFlags()[3] ? this.direction : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Product>
    WRITER$ = (org.apache.avro.io.DatumWriter<Product>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Product>
    READER$ = (org.apache.avro.io.DatumReader<Product>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
